version: '3.8'

services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html:delegated
      - ./php.ini:/etc/php/8.2/cli/conf.d/custom.ini
    depends_on:
      - db

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html:delegated
      - ./php.ini:/etc/php/8.2/apache2/conf.d/custom.ini
    depends_on:
      - db
      - mailhog
    restart: always

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: freela
      MYSQL_USER: ericlesalvess
      MYSQL_PASSWORD: 12345678
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always

  composer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    entrypoint: [ "composer" ]

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    entrypoint: [ "php", "artisan" ]

  npm:
    image: node:20-alpine
    user: "1000:1000"
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: ["sh", "-c", "if [ -f package.json ]; then npm install --legacy-peer-deps && npm run dev -- --host 0.0.0.0 --port 5173; else echo 'package.json n√£o encontrado' && sleep 30; fi"]
    restart: "no"

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1026:1025"
      - "8026:8025"
    restart: always

volumes:
  mysql_data:
  npm_cache: